<?php

/**
 * Implementation of hook_permission().
 */
function mysearch_permission() {
  return array(
    'access mysearch' => array(
        'title' => t('Access My Search'),
        'description' => t('Allows a user to access search results'),
      )
    );
}

/**
 * Implementation of hook_menu().
 */
function mysearch_menu() {
  $item = array(
    'title' => t('My Search'),
    'page callback' => 'mysearch_searchpage',
    'page arguments' => array(1, 2),
    'access arguments' => array('access mysearch'),
    'type' => MENU_SUGGESTED_ITEM,
  );
  $items['mysearch/%'] = $item;
  $items['mysearch/%/%'] = $item;
  return $items;
}


/**
 * Menu callback provides a simple list of nodes matching the
 * search term.
 * 
 * Example 1: hitting the URL:
 *   http://domain.com/mysearch/example
 * will return a list of links to nodes which have the word
 * "example" in them.
 * 
 * Example 2: hitting the URL:
 *   http://domain.com/mysearch/example/5
 * will return a list of links to nodes which have the word
 * "example" in them and next 5 nodes will be showed on the each page.
 */
function mysearch_searchpage($searchterm, $count) {
  // Select nodes and extend with pager (10 nodes on the page by default)
  $count = empty(intval($count)) ? 10 : abs(intval($count));
  $or = db_or();
  $or->condition('b.body_value', '%' . db_like($searchterm) . '%', 'LIKE');
  $or->condition('n.title', '%' . db_like($searchterm) . '%', 'LIKE');
  $query = db_select('node', 'n')
    ->extend('PagerDefault')
    ->limit($count);
  $query->join('field_data_body', 'b', 'n.nid = b.entity_id');
  $search_results = $query->fields('n', ['nid', 'title'])
    ->condition($or)
    ->execute();

  // Prepare and return results list
  $title = t('Search results for "@searchterm"', ['@searchterm' => $searchterm]);
  drupal_set_title($title);
  $attributes = [
    'id' => 'my_search_results_listing',
    'class' => ['my-search-results-listing'],
  ];
  $items = [];
  while ($record = $search_results->fetchAssoc()) {
    $items[] = [
      'id' => 'node_' . $record['nid'],
      'data' => l($record['title'], 'node/' . $record['nid'], ['attributes' => ['title' => $record['title']]]),
      'class' => ['node-' . $record['nid']],
    ];
  }
  $output = theme_item_list(['items' => $items, 'title' => $title, 'type' => 'ul', 'attributes' => $attributes]);
  $output .= empty($items) ? t('Nothing was found.') : theme('pager');
  return $output;
}